// ===================================================================
// üéØ EVALUATION CRITERIA - TI√äU CH√ç ƒê√ÅNH GI√Å CHI TI·∫æT
// ===================================================================

const evaluationCriteria = {
    // ==================== TECHNICAL SKILLS ASSESSMENT ====================
    technical_skills: {
        weight: 35,
        description: "ƒê√°nh gi√° k·ªπ nƒÉng k·ªπ thu·∫≠t v√† c√¥ng ngh·ªá",
        sub_criteria: {
            programming_languages: {
                weight: 40,
                description: "Ng√¥n ng·ªØ l·∫≠p tr√¨nh ph√π h·ª£p v·ªõi c√¥ng vi·ªác",
                scoring: {
                    excellent: { 
                        min: 90, 
                        description: "Th√†nh th·∫°o t·∫•t c·∫£ ng√¥n ng·ªØ y√™u c·∫ßu + c√≥ th√™m ng√¥n ng·ªØ li√™n quan",
                        indicators: ["5+ years experience", "Advanced certifications", "Contributed to open source"]
                    },
                    good: { 
                        min: 75, 
                        description: "Th√†nh th·∫°o h·∫ßu h·∫øt ng√¥n ng·ªØ y√™u c·∫ßu",
                        indicators: ["3-4 years experience", "Professional projects", "Some certifications"]
                    },
                    average: { 
                        min: 60, 
                        description: "C√≥ kinh nghi·ªám v·ªõi m·ªôt s·ªë ng√¥n ng·ªØ y√™u c·∫ßu",
                        indicators: ["1-2 years experience", "Personal projects", "Basic understanding"]
                    },
                    poor: { 
                        min: 0, 
                        description: "Thi·∫øu ho·∫∑c kh√¥ng c√≥ kinh nghi·ªám v·ªõi ng√¥n ng·ªØ y√™u c·∫ßu",
                        indicators: ["No relevant experience", "Different tech stack", "Learning phase"]
                    }
                }
            },
            frameworks_libraries: {
                weight: 35,
                description: "Framework v√† th∆∞ vi·ªán c√¥ng ngh·ªá",
                scoring: {
                    excellent: { min: 90, description: "Expert level v·ªõi frameworks hi·ªán ƒë·∫°i" },
                    good: { min: 75, description: "Th√†nh th·∫°o frameworks ch√≠nh" },
                    average: { min: 60, description: "C√≥ kinh nghi·ªám c∆° b·∫£n" },
                    poor: { min: 0, description: "Ch∆∞a c√≥ kinh nghi·ªám" }
                }
            },
            tools_technologies: {
                weight: 25,
                description: "C√¥ng c·ª• v√† c√¥ng ngh·ªá ph·ª• tr·ª£",
                scoring: {
                    excellent: { min: 90, description: "Th√†nh th·∫°o ecosystem c√¥ng c·ª•" },
                    good: { min: 75, description: "S·ª≠ d·ª•ng t·ªët c√¥ng c·ª• ch√≠nh" },
                    average: { min: 60, description: "Kinh nghi·ªám c∆° b·∫£n" },
                    poor: { min: 0, description: "Thi·∫øu kinh nghi·ªám c√¥ng c·ª•" }
                }
            }
        }
    },

    // ==================== EXPERIENCE ASSESSMENT ====================
    experience_relevance: {
        weight: 25,
        description: "Kinh nghi·ªám l√†m vi·ªác v√† ƒë·ªô ph√π h·ª£p",
        sub_criteria: {
            years_of_experience: {
                weight: 30,
                description: "S·ªë nƒÉm kinh nghi·ªám so v·ªõi y√™u c·∫ßu",
                scoring: {
                    excellent: { 
                        min: 90, 
                        description: "V∆∞·ª£t tr·ªôi v·ªÅ s·ªë nƒÉm kinh nghi·ªám",
                        calculation: "actual_years >= required_years * 1.5"
                    },
                    good: { 
                        min: 75, 
                        description: "ƒê√°p ·ª©ng ho·∫∑c v∆∞·ª£t y√™u c·∫ßu",
                        calculation: "actual_years >= required_years"
                    },
                    average: { 
                        min: 50, 
                        description: "Thi·∫øu nh∆∞ng g·∫ßn ƒë·ªß kinh nghi·ªám",
                        calculation: "actual_years >= required_years * 0.7"
                    },
                    poor: { 
                        min: 0, 
                        description: "Thi·∫øu kinh nghi·ªám ƒë√°ng k·ªÉ",
                        calculation: "actual_years < required_years * 0.7"
                    }
                }
            },
            position_relevance: {
                weight: 40,
                description: "ƒê·ªô ph√π h·ª£p c·ªßa v·ªã tr√≠ l√†m vi·ªác tr∆∞·ªõc ƒë√¢y",
                scoring: {
                    excellent: { min: 90, description: "V·ªã tr√≠ tr∆∞·ªõc ƒë√¢y r·∫•t ph√π h·ª£p ho·∫∑c cao h∆°n" },
                    good: { min: 75, description: "V·ªã tr√≠ t∆∞∆°ng ƒë∆∞∆°ng" },
                    average: { min: 50, description: "V·ªã tr√≠ li√™n quan" },
                    poor: { min: 0, description: "V·ªã tr√≠ kh√¥ng li√™n quan" }
                }
            },
            industry_experience: {
                weight: 30,
                description: "Kinh nghi·ªám trong ng√†nh",
                scoring: {
                    excellent: { min: 90, description: "Nhi·ªÅu nƒÉm trong c√πng ng√†nh" },
                    good: { min: 75, description: "C√≥ kinh nghi·ªám trong ng√†nh" },
                    average: { min: 50, description: "Ng√†nh li√™n quan" },
                    poor: { min: 0, description: "Ng√†nh kh√°c bi·ªát" }
                }
            }
        }
    },

    // ==================== EDUCATION & CERTIFICATION ====================
    education_qualifications: {
        weight: 15,
        description: "Tr√¨nh ƒë·ªô h·ªçc v·∫•n v√† ch·ª©ng ch·ªâ",
        sub_criteria: {
            degree_level: {
                weight: 50,
                description: "C·∫•p ƒë·ªô b·∫±ng c·∫•p",
                scoring: {
                    excellent: { 
                        min: 90, 
                        description: "Tr√¨nh ƒë·ªô v∆∞·ª£t y√™u c·∫ßu (PhD > Master > Bachelor)",
                        mapping: {
                            "Ti·∫øn sƒ©": 100,
                            "Th·∫°c sƒ©": 90, 
                            "C·ª≠ nh√¢n": 80,
                            "Cao ƒë·∫≥ng": 70,
                            "Trung c·∫•p": 50
                        }
                    },
                    good: { min: 75, description: "ƒê√∫ng tr√¨nh ƒë·ªô y√™u c·∫ßu" },
                    average: { min: 50, description: "G·∫ßn ƒë·∫°t y√™u c·∫ßu" },
                    poor: { min: 0, description: "D∆∞·ªõi y√™u c·∫ßu" }
                }
            },
            field_relevance: {
                weight: 30,
                description: "ƒê·ªô ph√π h·ª£p chuy√™n ng√†nh",
                scoring: {
                    excellent: { min: 90, description: "Chuy√™n ng√†nh ho√†n to√†n ph√π h·ª£p" },
                    good: { min: 75, description: "Chuy√™n ng√†nh li√™n quan" },
                    average: { min: 50, description: "Chuy√™n ng√†nh c√≥ li√™n quan" },
                    poor: { min: 0, description: "Chuy√™n ng√†nh kh√¥ng li√™n quan" }
                }
            },
            certifications: {
                weight: 20,
                description: "Ch·ª©ng ch·ªâ chuy√™n m√¥n",
                scoring: {
                    excellent: { min: 90, description: "C√≥ nhi·ªÅu ch·ª©ng ch·ªâ qu·ªëc t·∫ø uy t√≠n" },
                    good: { min: 75, description: "C√≥ ch·ª©ng ch·ªâ li√™n quan" },
                    average: { min: 50, description: "C√≥ m·ªôt s·ªë ch·ª©ng ch·ªâ" },
                    poor: { min: 0, description: "Kh√¥ng c√≥ ch·ª©ng ch·ªâ" }
                }
            }
        }
    },

    // ==================== PROJECT EXPERIENCE ====================
    project_portfolio: {
        weight: 20,
        description: "D·ª± √°n v√† th√†nh t·ª±u th·ª±c t·∫ø",
        sub_criteria: {
            project_relevance: {
                weight: 40,
                description: "ƒê·ªô ph√π h·ª£p c·ªßa d·ª± √°n v·ªõi c√¥ng vi·ªác",
                scoring: {
                    excellent: { min: 90, description: "C√≥ nhi·ªÅu d·ª± √°n r·∫•t ph√π h·ª£p" },
                    good: { min: 75, description: "C√≥ d·ª± √°n ph√π h·ª£p" },
                    average: { min: 50, description: "C√≥ m·ªôt s·ªë d·ª± √°n li√™n quan" },
                    poor: { min: 0, description: "Kh√¥ng c√≥ d·ª± √°n li√™n quan" }
                }
            },
            project_complexity: {
                weight: 30,
                description: "M·ª©c ƒë·ªô ph·ª©c t·∫°p v√† quy m√¥ d·ª± √°n",
                scoring: {
                    excellent: { min: 90, description: "D·ª± √°n l·ªõn, ph·ª©c t·∫°p, high-impact" },
                    good: { min: 75, description: "D·ª± √°n c√≥ quy m√¥ v·ª´a ph·∫£i" },
                    average: { min: 50, description: "D·ª± √°n nh·ªè ƒë·∫øn trung b√¨nh" },
                    poor: { min: 0, description: "Ch·ªâ c√≥ d·ª± √°n nh·ªè ho·∫∑c personal projects" }
                }
            },
            achievements_impact: {
                weight: 30,
                description: "Th√†nh t·ª±u v√† t√°c ƒë·ªông c·ªßa d·ª± √°n",
                scoring: {
                    excellent: { min: 90, description: "C√≥ metrics v√† impact r√µ r√†ng" },
                    good: { min: 75, description: "C√≥ th√†nh t·ª±u ƒë∆∞·ª£c ƒëo l∆∞·ªùng" },
                    average: { min: 50, description: "C√≥ m·ªôt s·ªë th√†nh t·ª±u" },
                    poor: { min: 0, description: "Kh√¥ng c√≥ th√†nh t·ª±u n·ªïi b·∫≠t" }
                }
            }
        }
    },

    // ==================== SOFT SKILLS & CULTURE FIT ====================
    soft_skills_culture: {
        weight: 5,
        description: "K·ªπ nƒÉng m·ªÅm v√† ph√π h·ª£p vƒÉn h√≥a",
        sub_criteria: {
            communication: {
                weight: 40,
                description: "K·ªπ nƒÉng giao ti·∫øp v√† ng√¥n ng·ªØ",
                scoring: {
                    excellent: { min: 90, description: "Excellent communication, multiple languages" },
                    good: { min: 75, description: "Good communication skills" },
                    average: { min: 50, description: "Basic communication" },
                    poor: { min: 0, description: "Limited communication skills" }
                }
            },
            leadership_teamwork: {
                weight: 35,
                description: "Leadership v√† kh·∫£ nƒÉng l√†m vi·ªác nh√≥m",
                scoring: {
                    excellent: { min: 90, description: "Strong leadership experience" },
                    good: { min: 75, description: "Good teamwork skills" },
                    average: { min: 50, description: "Basic collaboration" },
                    poor: { min: 0, description: "Limited team experience" }
                }
            },
            adaptability: {
                weight: 25,
                description: "Kh·∫£ nƒÉng th√≠ch ·ª©ng v√† h·ªçc h·ªèi",
                scoring: {
                    excellent: { min: 90, description: "Highly adaptable, continuous learner" },
                    good: { min: 75, description: "Good adaptability" },
                    average: { min: 50, description: "Moderate adaptability" },
                    poor: { min: 0, description: "Resistance to change" }
                }
            }
        }
    }
};

// ==================== SCORING CALCULATION FORMULAS ====================
const scoringFormulas = {
    // Formula ƒë·ªÉ t√≠nh overall score
    calculateOverallScore: (detailedScores, criteria = evaluationCriteria) => {
        let totalScore = 0;
        let totalWeight = 0;
        
        Object.keys(criteria).forEach(criteriaKey => {
            const criteriaData = criteria[criteriaKey];
            const score = detailedScores[criteriaKey] || 0;
            totalScore += score * (criteriaData.weight / 100);
            totalWeight += criteriaData.weight;
        });
        
        return Math.round(totalScore);
    },

    // Formula ƒë·ªÉ t√≠nh sub-criteria scores
    calculateSubCriteriaScore: (subScores, subCriteria) => {
        let totalScore = 0;
        let totalWeight = 0;
        
        Object.keys(subCriteria).forEach(subKey => {
            const subData = subCriteria[subKey];
            const score = subScores[subKey] || 0;
            totalScore += score * (subData.weight / 100);
            totalWeight += subData.weight;
        });
        
        return Math.round(totalScore);
    }
};

// ==================== RECOMMENDATION MAPPING ====================
const recommendationMapping = {
    HIGHLY_RECOMMENDED: {
        min_score: 85,
        description: "·ª®ng vi√™n xu·∫•t s·∫Øc, r·∫•t ph√π h·ª£p v·ªõi v·ªã tr√≠",
        next_steps: [
            "Proceed to technical interview immediately",
            "Prepare competitive offer package",
            "Consider for senior roles if applicable"
        ]
    },
    RECOMMENDED: {
        min_score: 70,
        max_score: 84,
        description: "·ª®ng vi√™n t·ªët, ph√π h·ª£p v·ªõi v·ªã tr√≠",
        next_steps: [
            "Schedule comprehensive interview",
            "Prepare standard offer within budget range",
            "Assess for team fit"
        ]
    },
    CONSIDER: {
        min_score: 55,
        max_score: 69,
        description: "·ª®ng vi√™n c√≥ ti·ªÅm nƒÉng nh∆∞ng c·∫ßn xem x√©t k·ªπ",
        next_steps: [
            "Conduct thorough evaluation interview",
            "Consider for training or junior positions",
            "Assess growth potential"
        ]
    },
    NOT_RECOMMENDED: {
        min_score: 0,
        max_score: 54,
        description: "·ª®ng vi√™n ch∆∞a ph√π h·ª£p v·ªõi y√™u c·∫ßu hi·ªán t·∫°i",
        next_steps: [
            "Polite rejection with feedback",
            "Keep in talent pool for future opportunities",
            "Suggest skill development areas"
        ]
    }
};

// ==================== INDUSTRY-SPECIFIC WEIGHTS ====================
const industrySpecificWeights = {
    technology: {
        technical_skills: 40,
        experience_relevance: 25,
        project_portfolio: 25,
        education_qualifications: 7,
        soft_skills_culture: 3
    },
    finance: {
        technical_skills: 25,
        experience_relevance: 30,
        education_qualifications: 25,
        project_portfolio: 15,
        soft_skills_culture: 5
    },
    marketing: {
        technical_skills: 20,
        experience_relevance: 25,
        project_portfolio: 30,
        education_qualifications: 10,
        soft_skills_culture: 15
    },
    design: {
        technical_skills: 35,
        project_portfolio: 35,
        experience_relevance: 20,
        education_qualifications: 5,
        soft_skills_culture: 5
    },
    sales: {
        experience_relevance: 35,
        soft_skills_culture: 30,
        project_portfolio: 20,
        technical_skills: 10,
        education_qualifications: 5
    }
};

module.exports = {
    evaluationCriteria,
    scoringFormulas,
    recommendationMapping,
    industrySpecificWeights
};
